<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.big.mapper.proTodoMapper">
	<!-- 게시글 목록 불러오기 -->
   <select id="selectBoardList" resultType="org.big.dto.BoardDto">
   		<![CDATA[
           SELECT
              *
           FROM
              pro_board
           
           ORDER BY b_num DESC
        ]]>
   </select>
   <!-- 조회수 증가 -->
   <update id="updateHitCount" parameterType="int">
      <![CDATA[
         UPDATE
            pro_board
         SET
            b_hit = b_hit + 1
         WHERE
            b_num = #{bNum}
      ]]>
   </update>
   <!-- 게시글 작성 -->
   <insert id="addBoard" parameterType="org.big.dto.BoardDto">
        <![CDATA[
           INSERT INTO pro_board
           (
           	  member_id,
              b_subject,
              b_content,
              b_regist_day
           )
           VALUES
           (
              #{memberId},
              #{bSubject},
              #{bContent},
              sysdate
           )
        ]]>
   </insert>
   <!-- 게시글 상세 불러오기 -->
   <select id="selectBoardDetail" resultType="org.big.dto.BoardDto" parameterType="int">
      <![CDATA[
         SELECT
            b_num,
            b_subject,
            b_content,
            b_hit,
            b_regist_day,
            member_id
         FROM
            pro_board
         WHERE
            b_num=#{bNum}
      ]]>
   </select>
   <!-- 게시글 수정 -->
   <update id="updateBoard" parameterType="org.big.dto.BoardDto">
      <![CDATA[
         UPDATE
               pro_board
            SET
               b_subject = #{bSubject},
               b_content = #{bContent}
            WHERE
               b_num = #{bNum}
      ]]>
   </update>
	<!-- 게시글 삭제 -->
   <update id="deleteBoard" parameterType="int">
      <![CDATA[
         DELETE FROM pro_board
           WHERE b_num = #{bNum}
      ]]>
   </update>
   <!-- 로그인 -->
   <select id="loginFindMember" resultType="org.big.dto.MemberDto">
   		<![CDATA[
   			SELECT
   				member_id, m_password
   			FROM pro_member
   			WHERE member_id = #{memberId}
   		]]>
   </select>
   <!-- 회원가입 -->
   <insert id="addMember" parameterType="org.big.dto.MemberDto">
        <![CDATA[
           INSERT INTO pro_member
           (
              member_id,
              m_password,
              m_name,
              m_phone,
              m_email,
              m_regist_day
           )
           VALUES
           (
              #{memberId},
              #{mPassword},
              #{mName},
              #{mPhone},
              #{mEmail},
              sysdate
           )
        ]]>
   </insert>
   <!-- 회원정보 불러오기 -->
   <select id="selectMemberbyId" resultType="org.big.dto.MemberDto">
   		<![CDATA[
           SELECT
              member_id,
              m_password,
              m_name,
              m_phone,
              m_email
           FROM
              pro_member
           WHERE
           	 member_id = #{memberId}
        ]]>
   </select>
   <!-- 회원정보 수정 -->
   <update id="updateMember" parameterType="org.big.dto.MemberDto">
      <![CDATA[
         UPDATE
            pro_member
         SET
            member_id = #{memberId},
            m_password = #{mPassword},
            m_name = #{mName},
            m_phone = #{mPhone},
            m_email = #{mEmail}
         WHERE
            member_id = #{memberId}
      ]]>
   </update>
   <!-- 회원 탈퇴 -->
   <update id="deleteMember" parameterType="String">
      <![CDATA[
         DELETE FROM pro_member
           WHERE member_id = #{memberId}
      ]]>
   </update>
   <!-- 팀 정보 불러오기 -->
   <select id="selectTeam" resultType="org.big.dto.TeamDto">
   		<![CDATA[
          SELECT 
			    t.t_id, 
			    t.t_name, 
			    t.member_id, 
			    t.t_role, 
			    m.m_name,
			    (CASE WHEN t.t_id IS NOT NULL THEN 1 ELSE 0 END) AS hasTeam,
			    (CASE WHEN t.member_id = #{memberId} AND t.t_role = '팀장' THEN 1 ELSE 0 END) AS isLeader
			FROM 
			    pro_team t
			JOIN 
			    pro_member m ON t.member_id = m.member_id
			WHERE 
			    t.t_name = (SELECT t_name FROM pro_team WHERE member_id = #{memberId})
        ]]>
   </select>
   <!-- 팀 셋 정보 불러오기 -->
   <select id="selectTeamSet" resultType="org.big.dto.TeamDto">
   		<![CDATA[
          SELECT 
    		t_name,
    		member_id,
    		t_role
          FROM 
    		pro_team
          WHERE 
          	t_name = (SELECT t_name FROM pro_team WHERE member_id = #{memberId})
        ]]>
   </select>
   <!-- 팀 추가 -->
   <insert id="addTeam" parameterType="org.big.dto.TeamDto">
        <![CDATA[
           INSERT INTO pro_team
           (
           	  t_name,
              member_id,
              t_role
           )
           VALUES
           (
              #{tName},
              #{memberId},
              '팀장'
           )
        ]]>
   </insert>
   <!-- 팀 존재여부 조회 -->
   <select id="selectExistsBytName" parameterType="String" resultType="int">
   		<![CDATA[
           SELECT
              COUNT(*)
           FROM
              pro_team
           WHERE
           	  t_name = #{tName}
        ]]>
   </select>
   <!-- 팀원 추가 -->
   <insert id="addTeamMember" parameterType="org.big.dto.TeamDto">
        <![CDATA[
           INSERT INTO pro_team
           (
           	  t_name,
              member_id,
              t_role
           )
           VALUES
           (
              #{tName},
              #{memberId},
              #{tRole}
           )
        ]]>
   </insert>
   <!-- 팀원 삭제 -->
   <update id="deleteTeamMember" parameterType="String">
      <![CDATA[
         DELETE FROM pro_team
           WHERE member_id = #{memberId}
      ]]>
   </update>
   <!-- phon, email 존재(중복)여부 한번에! -->
   <select id="selectExistsByPE" parameterType="String" resultType="org.big.dto.MemberDto">
	   <![CDATA[
	   		SELECT
			    MAX(CASE WHEN m_phone = #{mPhone} THEN 1 ELSE 0 END) AS phoneExists,
			    MAX(CASE WHEN m_email = #{mEmail} THEN 1 ELSE 0 END) AS emailExists
			FROM pro_member
	   ]]>
   </select>
      
   <!-- id 존재여부 조회 -->
   <select id="selectExistsBymId" parameterType="String" resultType="int">
   		<![CDATA[
           SELECT
              COUNT(*)
           FROM
              pro_member
           WHERE
           	  member_id = #{memberId}
        ]]>
   </select>
   <!-- 해당 멤버의 팀 존재여부 조회 -->
   <select id="selectTeamExistsBymId" parameterType="String" resultType="int">
   		<![CDATA[
           SELECT
              COUNT(*)
           FROM
              pro_team
           WHERE
           	  member_id = #{memberId}
        ]]>
   </select>
   <!-- 팀 탈퇴 -->
   <update id="deleteTeambyId" parameterType="String">
      <![CDATA[
         DELETE FROM pro_team
           WHERE member_id = #{memberId}
      ]]>
   </update>
   <!-- 팀 이름을 통해 팀 삭제 -->
   <update id="deleteTeambyTeamName" parameterType="String">
      <![CDATA[
         DELETE FROM pro_team
           WHERE t_name = #{tName}
      ]]>
   </update>
   
    

</mapper>